name    = Rex-Hook-File-Impostor
author  = Ferenc Erki <erkiferenc@gmail.com>
license = LGPL_3_0
copyright_holder = Ferenc Erki
copyright_year   = 2020

[Test::Compile]
xt_mode = 1

[Test::Perl::Critic]
critic_config = .perlcriticrc

[MakeMaker]
[PodSyntaxTests]
[ContributorsFile]
[CPANFile]
[MetaJSON]
[MetaYAML]
[License]
[ShareDir]

; file gatherer
[Git::GatherDir]
include_dotfiles = 1
exclude_filename = cpanfile
exclude_filename = LICENSE
exclude_filename = Makefile.PL
exclude_filename = README.pod

[Git::Contributors]

[Meta::Contributors]

; metadata
[GitHub::Meta]
[MetaProvides::Package]

; version
[PreviousVersion::Changelog]

; execfiles
[ExecDir]

; prereqs
; authordep Pod::Weaver::Plugin::StopWords
; authordep Pod::Weaver::Section::Legal::Supplemented
; authordep Pod::Elemental::Transformer::List
[AutoPrereqs]
[Prereqs / DevelopRequires]
Perl::Critic::Freenode = 0.032
Perl::Critic::TooMuchCode = 0.13

; file munger
[PodWeaver]
[NextRelease]
time_zone = UTC
format = %-8v %{yyyy-MM-dd HH:mm:ss'Z'}d%{ (TRIAL RELEASE)}T

[RewriteVersion]
skip_version_provider = 1

[NextVersion::Semantic]
format = v%d.%2d.%2d
revision = BUG FIXES, DOCUMENTATION, UNGROUPED

[ReadmeAnyFromPod]
[ReadmeAnyFromPod / ReadmePodInBuild]

; install tool
[MatchManifest]
[ManifestSkip]

; after build
[CopyFilesFromBuild]
copy = cpanfile
copy = LICENSE
copy = Makefile.PL
copy = MANIFEST
move = README.pod

[Git::Check]
allow_dirty = Changes
allow_dirty = cpanfile
allow_dirty = LICENSE
allow_dirty = Makefile.PL
allow_dirty = MANIFEST
allow_dirty = README.pod
untracked_files = warn

; before release
[CheckChangesHasContent]
[RunExtraTests]
[TestRelease]
[Test::Kwalitee]
[Test::Pod::Coverage::Configurable]
also_private = copy_file
also_private = get_impostor_for
also_private = get_impostor_dir
[Git::Commit / GeneratedFiles]
allow_dirty = Changes
allow_dirty = cpanfile
allow_dirty = LICENSE
allow_dirty = Makefile.PL
allow_dirty = MANIFEST
allow_dirty = README.pod
commit_msg = Release %v%n%n%c

[ConfirmRelease]

; release
[FakeRelease]

; after release
[Git::Tag]
tag_format = %v
tag_message = %v%n%n%c

[Git::Push]
[GitHub::Update]
meta_home = 1
